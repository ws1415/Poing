int playerX;
int playerY;
int playerSpeed;

int boardSizeX;
int boardSizeY;

int enX;
int enY;
int enSpeed;

float ballX;
float ballY;
float ballSpeedX;
int ballSpeedY;
int ballSize;
int ballR;
float speedEr;
boolean player2;
void setup()
{
  
  size(900,600);
  player2 = true;
  boardSizeX = 8;
  boardSizeY = 32*3;
  playerX = 0;
  playerY = width/2;
  playerSpeed = 5;
  speedEr = 1;
  enX = width - boardSizeX-1;
  enSpeed = 2;
  enY = height/2-10;
  
  ballX = width/2;
  ballY = height/2;
  ballR = (int)random(0,1);
  ballSize =  16;
  ballSpeedX = 3;
  ballSpeedY = 2;

  
}


void draw()
{

 background(44,44,44);
 stroke(255);
 line(width/2,0,width/2,width);
 drawPlayer();
 drawEn();
 drawBall();
 checkHit();
 actionListener();
  
  
  
}
void actionListener()
{
  
  if(keyPressed)
  {
    
    if(key == 's')
    {
      
      playerY = playerY + playerSpeed;
      
    }
    
    else if(key == 'w')
    {
      
      playerY = playerY - playerSpeed;
      
    }
    
    if(keyCode == UP)
    {
      
      enY = enY - enSpeed;
      
    }
    
    else if(keyCode == DOWN)
    {
      
      enY = enY + enSpeed;
      
    }
    

  }
  if(ballR == 0)
  {
    if(ballY-ballSpeedY > height || ballY-ballSpeedY < 0)
    {
      
      ballSpeedY = ballSpeedY * -1;
      
    }
  }
  else if(ballR == 1)
  {
    if(ballY+ballSpeedY > height || ballY+ballSpeedY < 0)
    {
      
      ballSpeedY = ballSpeedY * -1;
      
    }
    
  }
  if(ballR == 0)
  {
    ballX = ballX - ballSpeedX;
    ballY = ballY - ballSpeedY;
  }
  else if(ballR == 1)
  {
    ballX = ballX + ballSpeedX;
    ballY = ballY + ballSpeedY;
  }
  if(player2 == false)
  {
  if(ballY > enY+boardSizeY/2)
    enY = enY + enSpeed;
   else
    enY = enY - enSpeed;
  }
  
}

void checkHit()
{
  if(ballR == 0)
  {
    if(ballY > playerY-boardSizeY && ballY < playerY+boardSizeY)
    {

      if(ballX < boardSizeX*2)
      {
          speedEr = speedEr + 0.01;
        
          ballR = 1;
          do{
            ballSpeedY = (int) random(-3,3);
          }while(ballSpeedY == 0);
          ballSpeedX = ballSpeedX * speedEr;

      }
    }
  }
   else if(ballR == 1)
   {
     if(ballY > enY-boardSizeY && ballY < enY+boardSizeY)
     {
       println("T");
       if(ballX > width-boardSizeX*2)
       {
         speedEr = speedEr + 0.01;
         ballSpeedX = ballSpeedX * speedEr;
         ballR = 0;
          do{
             ballSpeedY = (int) random(-3,3);
          }while(ballSpeedY == 0);
       }
     }
   }
  
  
  
}
void drawBall()
{
  ellipse(ballX,ballY,ballSize,ballSize);
  
  
}
void drawPlayer()
{
  fill(0,0,200);
  rect(playerX,playerY,boardSizeX,boardSizeY);
  
  
}

void drawEn(){
  fill(200,0,0);
  rect(enX,enY,boardSizeX,boardSizeY);
  
}
